version: 2.1

# orbs:
#   heroku: circleci/heroku@2.0.0

jobs:
  deploy-backend:
    docker:
      - image: cimg/base:stable-20.04
    resource_class: small
    steps:
      - checkout
      - run:
          name: "Prepare and deploy backend"
          command: |
            cd backend
            ls -la
            git config --global init.defaultBranch main
            git init .
            git config user.name "CircleCI"
            git config user.email "deploy@circleci.com"
            git add . && git commit -m "Committing backend"
            git push https://$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git main --force
      # - heroku/deploy-via-git:
      #     app-name: $HEROKU_APP_NAME
      #     api-key: HEROKU_API_KEY
      #     force: true
  deploy-frontend:
    docker:
      - image: cimg/base:stable-20.04
    resource_class: small
    steps:
      - checkout
      - run:
          name: "Prepare and deploy frontend"
          command: |
            cd frontend
            ls -la
            git config --global init.defaultBranch main
            git init .
            git config user.name "CircleCI"
            git config user.email "deploy@circleci.com"
            git add . && git commit -m "Committing frontend"
            echo "Deploying frontend to Heroku"
            git push https://$HEROKU_API_KEY@git.heroku.com/$HEROKU_FRONTEND_APP_NAME.git main --force
      # - heroku/deploy-via-git:
      #     app-name: $HEROKU_FRONTEND_APP_NAME
      #     api-key: HEROKU_API_KEY
      #     force: true
  build-frontend:
    docker:
      - image: cimg/node:18.12.1
    resource_class: large
    working_directory: ~/project/frontend
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package-lock.json" }}
      - run: |
          cd frontend
          echo "Installing React dependencies"
          npm install
          echo "Running React tests"
          npm test
      - store_test_results:
          path: ../test-results
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package-lock.json" }}
    # parallelism: 2
  build-backend:
    docker:
      - image: circleci/python:3.9
    resource_class: small
    working_directory: ~/project/backend
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
      - run: |
          cd backend
          echo "Creating virtual environment"
          python -m venv venv
          source venv/bin/activate
          python -m pip install --upgrade pip
          echo "Installing Python dependencies"
          pip install -r requirements.txt
          # echo "Running Python tests"
          # pytest
      - store_test_results:
          path: ../test-results
      - save_cache:
          paths:
            - venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}
    # parallelism: 2

workflows:
  build-test-deploy-frontend:
    jobs:
      - build-frontend
      - deploy-frontend:
          requires:
            - build-frontend
          filters:
            branches:
              only:
                - main
  build-test-deploy-backend:
    jobs:
      - build-backend
      - deploy-backend:
          requires:
            - build-backend
          filters:
            branches:
              only:
                - main
