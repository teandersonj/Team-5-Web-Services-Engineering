version: 2.1

orbs:
  heroku: circleci/heroku@2.0.0

jobs:
  deploy-backend:
    executor: heroku/default
    resource_class: small
    steps:
        - checkout
        - run:
            name: "Prepare backend for deployment"
            command: |
              cd backend
              ls -la
        - heroku/deploy-via-git:
            app-name: $HEROKU_APP_NAME
            api-key: HEROKU_API_KEY
            force: true
  deploy-frontend:
    executor: heroku/default
    resource_class: small
    steps:
      - checkout
      - run:
          name: "Prepare frontend for deployment"
          command: |
            cd frontend
            ls -la
      - heroku/deploy-via-git:
          app-name: $HEROKU_FRONTEND_APP_NAME
          api-key: HEROKU_API_KEY
          force: true
  build-frontend:
    docker:
      - image: cimg/node:18.12.1
    resource_class: small
    working_directory: ~/project/frontend
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package-lock.json" }}
      - run: |
          cd frontend
          echo "Installing React dependencies"
          npm install
          echo "Running React tests"
          npm test
      - store_test_results:
          path: frontend/test-results
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package-lock.json" }}
    # parallelism: 2
  build-backend:
    docker:
      - image: circleci/python:3.9
    resource_class: small
    working_directory: ~/project/backend
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
      - run: |
          cd backend
          echo "Creating virtual environment"
          python -m venv venv
          source venv/bin/activate
          python -m pip install --upgrade pip
          echo "Installing Python dependencies"
          pip install -r requirements.txt
          # echo "Running Python tests"
          # pytest
      - store_test_results:
          path: backend/test-results
      - save_cache:
          paths:
            - venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}
    # parallelism: 2

workflows:
  build-test-deploy-frontend:
    jobs:
      - build-frontend
      - deploy-frontend:
          requires:
            - build-frontend
          filters:
            branches:
              only:
                - CICDTest
  build-test-deploy-backend:
    jobs:
      - build-backend
      - deploy-backend:
          requires:
            - build-backend
          filters:
            branches:
              only:
                - CICDTest
